" ---------
"  general
" ---------
set nocompatible
filetype plugin indent on
syntax enable
set autoindent
set backspace=indent,eol,start
set ttimeout
set ttimeoutlen=10
set incsearch
set wildmenu
set number relativenumber
set noshowmode

" ----------
"  mappings
" ----------
noremap <F1> :w<CR>

" ------------
"  statusline
" ------------
set laststatus=2
set statusline=
set statusline+=%2*
set statusline+=%{StatuslineMode()}
set statusline+=%1*
set statusline+=
set statusline+=%8*
set statusline+=%{b:gitbranch}
set statusline+=%7*
set statusline+=
set statusline+=%8*
set statusline+=%r
set statusline+=%7*
set statusline+=
set statusline+=%8*
set statusline+=%m
set statusline+=%7*
set statusline+=
set statusline+=%8*
set statusline+=%=
set statusline+=%7*
set statusline+=
set statusline+=%8*
set statusline+=%{StatuslineCurrentDirectory()}
set statusline+=%5*
set statusline+=
set statusline+=%6*
set statusline+=\  
set statusline+=%{StatuslinePercentOfFile()}
set statusline+=\  
set statusline+=%3*
set statusline+=
set statusline+=%4*
set statusline+=\  
set statusline+=%3l:%-2v
hi User1 ctermbg=black ctermfg=lightgreen guibg=black guifg=lightgreen
hi User2 ctermbg=lightgreen ctermfg=black guibg=lightgreen guifg=black
hi User3 ctermbg=darkgray ctermfg=lightgray guibg=darkgray guifg=lightgray
hi User4 ctermbg=lightgray ctermfg=black guibg=lightgray guifg=black
hi User5 ctermbg=black ctermfg=darkgray guibg=black guifg=darkgray
hi User6 ctermbg=darkgray ctermfg=black guibg=darkgray guifg=black
hi User7 ctermbg=black ctermfg=black guibg=black guifg=black
hi User8 ctermbg=black ctermfg=white guibg=black guifg=white

function! StatuslineMode()
  let l:mode=mode()
  if l:mode==#"n"
    return "  NORMAL "
  elseif l:mode==?"v"
    return "  VISUAL "
  elseif l:mode==#"i"
    return "  INSERT "
  elseif l:mode==#"R"
    return "  REPLACE "
  elseif l:mode==?"s"
    return "  SELECT "
  elseif l:mode==#"t"
    return "  TERMINAL "
  elseif l:mode==#"c"
    return "  COMMAND "
  elseif l:mode==#"!"
    return "  SHELL "
  endif
endfunction

function! StatuslineGitBranch()
  let b:gitbranch=""
  if &modifiable
    try
      let l:dir=expand('%:p:h')
      let l:gitrevparse = system("git -C ".l:dir." rev-parse --abbrev-ref HEAD")
      if !v:shell_error
        let b:gitbranch="  ".substitute(l:gitrevparse, '\n', '', 'g')." "
      endif
    catch
    endtry
  endif
endfunction

function! StatuslineReadonly()
  return &readonly ? '' : ''
endfunction

function! StatuslineCurrentDirectory() abort
  return getcwd()." "
endfunction

function! StatuslinePercentOfFile()
  let current = line('.') + 0.0
  let total = line('$') + 0.0
  return printf('%.0f%%', (current / total) * 100)
endfunction

augroup GetGitBranch
  autocmd!
  autocmd VimEnter,WinEnter,BufEnter * call StatuslineGitBranch()
augroup END
